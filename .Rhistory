library(blogdown)
install.packages("blogdown")
install.packages("blogdown")
blogdown::install_hugo()
blogdown::new_site(theme="vaga/hugo-theme-m10c")
blogdown::stop_server()
blogdown::hugo_version()
blogdown:::new_post_addin()
blogdown:::preview_site()
blogdown:::new_post_addin()
blogdown:::preview_site()
knitr::opts_chunk$set(collapse = TRUE)
library(DAAG)
install.packages("party")
install.packages("rpart")
install.packages("rpart.plot")
install.packages("mlbench")
install.packages("pROC")
install.packages("tree")
install.packages("caret")
library(tidyverse)
library(DAAG)
library(party)
library(rpart)
library(rpart.plot)
library(mlbench)
library(pROC)
library(tree)
library(caret)
str(spam7)
mydata <- spam7
data <- spam7
str(spam7)
str(spam7)
sum(data$yesno)
count(data$yesno)
table(data$yesno)
str(data)
plot(data$dollar)
set.seed(1337)
set.seed(1337)
index <- sample(2, nrow(data), replace = T, prob = c(0.5, 0.5))
train <- data[index == 1,]
test <- data[index == 2,]
tree <- rpart(yesno ~., data = train)
rpart.plot(tree)
printcp(tree)
plotcp(tree)
knitr::opts_chunk$set(collapse = TRUE,warning=FALSE,message=F)
rpart.plot(tree)
knitr::opts_chunk$set(collapse = TRUE,warning=FALSE,message=F,fig.path = "static")
printcp(tree)
plotcp(tree)
blogdown::check_site()
rpart.plot(tree)
blogdown::check_site()
blogdown::build_site()
blogdown:::preview_site()
knitr::opts_chunk$set(collapse = TRUE,warning=FALSE,message=F,fig.path = "static")
test
library(tidyverse)
library(DAAG)
library(party)
library(rpart)
library(rpart.plot)
library(mlbench)
library(pROC)
library(tree)
library(caret)
data <- spam7
str(data)
table(data$yesno)
set.seed(1337)
index <- sample(2, nrow(data), replace = T, prob = c(0.5, 0.5))
train <- data[index == 1,]
test <- data[index == 2,]
nrow(train)
nrow(test)
nrow(train)
nrow(test)
tree <- rpart(yesno ~., data = train)
rpart.plot(tree)
56+17+27
blogdown:::preview_site()
knitr::opts_chunk$set(collapse = TRUE,warning=FALSE,message=F)
p <- predict(tree, train, type = 'class')
blogdown::hugo_build()
blogdown:::preview_site()
knitr::opts_chunk$set(collapse = TRUE,warning=FALSE,message=F)
?rpoart.plot
?rpart.plot
??rpart.plot
rpart.plot(tree,type=4,)
library(tidyverse)
library(DAAG)
library(party)
library(rpart)
library(rpart.plot)
library(mlbench)
library(pROC)
library(tree)
library(caret)
data <- spam7
str(data)
table(data$yesno)
set.seed(1337)
index <- sample(2, nrow(data), replace = T, prob = c(0.5, 0.5))
train <- data[index == 1,]
test <- data[index == 2,]
tree <- rpart(yesno ~., data = train)
rpart.plot(tree,type=4,)
rpart.plot(tree,type=4)
rpart.plot(tree,type=4,extra=101)
printcp(tree)
blogdown::hugo_build()
knitr::opts_chunk$set(collapse = TRUE,warning=FALSE,message=F)
data('BostonHousing')
data <- BostonHousing
str(data)
set.seed(1337)
ind <- sample(2, nrow(data), replace = T, prob = c(0.5, 0.5))
train <- mydata[ind == 1,]
train <- data[ind == 1,]
test <- data[ind == 2,]
train
test
ind <- sample(2, nrow(data), replace = T, prob = c(.75, .25))
set.seed(1337)
ind <- sample(2, nrow(data), replace = T, prob = c(.75, .25))
train <- data[ind == 1,]
test <- data[ind == 2,]
train
test
install.packages("caTools")
library(caTools)
ind <- sample.split(data, SplitRatio = 0.75)
train <- subset(data,split==TRUE)
ind <- sample.split(data$medv, SplitRatio = 0.75)
train <- subset(data,split==TRUE)
ind <- sample(2, nrow(data), replace = T, prob = c(.75, .25))
set.seed(1337)
ind <- sample(2, nrow(data), replace = T, prob = c(.75, .25))
train <- data[ind == 1,]
test <- data[ind == 2,]
library(readxl)
read_xlsx("C:/Users/Oskar/Downloads/rapport.xlsx")
read_xlsx("C:/Users/Oskar/Downloads/rapport.xlsx")
read_xlsx("C:/Users/Oskar/Downloads/rapport.xlsx")
read_xlsx("C:/Users/Oskar/Downloads/rapport.xlsx")
knitr::opts_chunk$set(collapse = TRUE,warning=FALSE,message=F)
plotcp(tree)
library(tidyverse)
library(DAAG)
library(party)
library(rpart)
library(rpart.plot)
library(mlbench)
library(pROC)
library(tree)
library(caret)
data <- spam7
str(data)
table(data$yesno)
set.seed(1337)
index <- sample(2, nrow(data), replace = T, prob = c(0.5, 0.5))
train <- data[index == 1,]
test <- data[index == 2,]
tree <- rpart(yesno ~., data = train)
rpart.plot(tree,type=4,extra=101)
printcp(tree)
plotcp(tree)
p <- predict(tree, train, type = 'class')
confusionMatrix(p, train$yesno)
p
confusionMatrix(p, train$yesno)
p
str(p)
for (i in 1:length(p)) {
if(p[i]==train$yesno[i]) print("Hej")
}
confusionMatrix(p, train$yesno)
for (i in 1:length(p)) {
if(p[i]=="no" & train$yesno[i]=="no") print("Hej")
}
for (i in 1:length(p)) {
if(p[i]=="no" & train$yesno[i]=="no") print("Hej")
}
for (i in 1:length(p)) {
if(p[i]=="no" && train$yesno[i]=="no") print("Hej")
}
p[1]
p[1]=="y"
p[1]=="y" & train$yesno[i]=="no"
p[1]=="y" & train$yesno[1]=="no"
f11=0
for (i in 1:length(p)) {
if(p[i]=="no" & train$yesno[i]=="no") f11 = f11+1
}
f11
train
table(p,train$yesno)
confusionMatrix(pp, test$yesno)
pp <- predict(tree, test, type = 'class')
confusionMatrix(pp, test$yesno)
t = table(p,train$yesno)
t
colnames(t)
rownames(t)
